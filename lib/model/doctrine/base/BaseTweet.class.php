<?php

/**
 * BaseTweet
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $user_id
 * @property integer $source_id
 * @property integer $geolocation_id
 * @property integer $in_reply_to_user_id
 * @property integer $in_reply_to_status_id
 * @property timestamp $tweet_created_at
 * @property integer $tweet_twitter_id
 * @property integer $statuses_count
 * @property string $text
 * @property TweetUser $TweetUser
 * @property TweetSource $TweetSource
 * @property TweetGeoLocation $TweetGeoLocation
 * 
 * @method integer          getUserId()                Returns the current record's "user_id" value
 * @method integer          getSourceId()              Returns the current record's "source_id" value
 * @method integer          getGeolocationId()         Returns the current record's "geolocation_id" value
 * @method integer          getInReplyToUserId()       Returns the current record's "in_reply_to_user_id" value
 * @method integer          getInReplyToStatusId()     Returns the current record's "in_reply_to_status_id" value
 * @method timestamp        getTweetCreatedAt()        Returns the current record's "tweet_created_at" value
 * @method integer          getTweetTwitterId()        Returns the current record's "tweet_twitter_id" value
 * @method integer          getStatusesCount()         Returns the current record's "statuses_count" value
 * @method string           getText()                  Returns the current record's "text" value
 * @method TweetUser        getTweetUser()             Returns the current record's "TweetUser" value
 * @method TweetSource      getTweetSource()           Returns the current record's "TweetSource" value
 * @method TweetGeoLocation getTweetGeoLocation()      Returns the current record's "TweetGeoLocation" value
 * @method Tweet            setUserId()                Sets the current record's "user_id" value
 * @method Tweet            setSourceId()              Sets the current record's "source_id" value
 * @method Tweet            setGeolocationId()         Sets the current record's "geolocation_id" value
 * @method Tweet            setInReplyToUserId()       Sets the current record's "in_reply_to_user_id" value
 * @method Tweet            setInReplyToStatusId()     Sets the current record's "in_reply_to_status_id" value
 * @method Tweet            setTweetCreatedAt()        Sets the current record's "tweet_created_at" value
 * @method Tweet            setTweetTwitterId()        Sets the current record's "tweet_twitter_id" value
 * @method Tweet            setStatusesCount()         Sets the current record's "statuses_count" value
 * @method Tweet            setText()                  Sets the current record's "text" value
 * @method Tweet            setTweetUser()             Sets the current record's "TweetUser" value
 * @method Tweet            setTweetSource()           Sets the current record's "TweetSource" value
 * @method Tweet            setTweetGeoLocation()      Sets the current record's "TweetGeoLocation" value
 * 
 * @package    grabeeter
 * @subpackage model
 * @author     Herbert Muehlburger
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTweet extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('tweet');
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('source_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('geolocation_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('in_reply_to_user_id', 'integer', 12, array(
             'type' => 'integer',
             'length' => 12,
             ));
        $this->hasColumn('in_reply_to_status_id', 'integer', 20, array(
             'type' => 'integer',
             'length' => 20,
             ));
        $this->hasColumn('tweet_created_at', 'timestamp', null, array(
             'type' => 'timestamp',
             'notnull' => true,
             ));
        $this->hasColumn('tweet_twitter_id', 'integer', 20, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 20,
             ));
        $this->hasColumn('statuses_count', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('text', 'string', 140, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 140,
             ));


        $this->index('tweetIndex', array(
             'fields' => 
             array(
              0 => 'text',
             ),
             ));
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('TweetUser', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('TweetSource', array(
             'local' => 'source_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('TweetGeoLocation', array(
             'local' => 'geolocation_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}