CREATE TABLE tweet (id BIGINT AUTO_INCREMENT, user_id BIGINT NOT NULL, source_id BIGINT NOT NULL, geolocation_id BIGINT, in_reply_to_user_id BIGINT, in_reply_to_status_id BIGINT, tweet_created_at DATETIME NOT NULL, tweet_twitter_id BIGINT NOT NULL, statuses_count BIGINT NOT NULL, text VARCHAR(140) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX tweetIndex_idx (text), INDEX user_id_idx (user_id), INDEX source_id_idx (source_id), INDEX geolocation_id_idx (geolocation_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE tweet_geo_location (id BIGINT AUTO_INCREMENT, latitude FLOAT(9, 6) DEFAULT 0 NOT NULL, longitude FLOAT(9, 6) DEFAULT 0 NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE tweet_source (id BIGINT AUTO_INCREMENT, label VARCHAR(255) DEFAULT 'web' NOT NULL, url VARCHAR(255), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX sourceIndex_idx (label, url), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE tweet_user (id BIGINT AUTO_INCREMENT, name VARCHAR(255), screen_name VARCHAR(15) NOT NULL UNIQUE, twitter_user_id BIGINT NOT NULL, description VARCHAR(255), followers_count BIGINT DEFAULT 0 NOT NULL, statuses_count BIGINT DEFAULT 1 NOT NULL, url VARCHAR(255), friends_count BIGINT DEFAULT 0 NOT NULL, geo_enabled TINYINT(1) DEFAULT '0' NOT NULL, twitter_created_at DATETIME NOT NULL, time_zone VARCHAR(255), location VARCHAR(255), lang VARCHAR(10), utc_offset BIGINT, profile_image_url VARCHAR(255) NOT NULL, last_saved_tweet_id BIGINT DEFAULT 0, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX mainUserIndex_idx (name, description), INDEX additionalUserIndex_idx (url, time_zone, location, lang), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE sf_guard_forgot_password (id BIGINT AUTO_INCREMENT, user_id BIGINT NOT NULL, unique_key VARCHAR(255), expires_at DATETIME NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_group (id BIGINT AUTO_INCREMENT, name VARCHAR(255) UNIQUE, description TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_group_permission (group_id BIGINT, permission_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(group_id, permission_id)) ENGINE = INNODB;
CREATE TABLE sf_guard_permission (id BIGINT AUTO_INCREMENT, name VARCHAR(255) UNIQUE, description TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_remember_key (id BIGINT AUTO_INCREMENT, user_id BIGINT, remember_key VARCHAR(32), ip_address VARCHAR(50), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user (id BIGINT AUTO_INCREMENT, first_name VARCHAR(255), last_name VARCHAR(255), email_address VARCHAR(255) NOT NULL UNIQUE, username VARCHAR(128) NOT NULL UNIQUE, algorithm VARCHAR(128) DEFAULT 'sha1' NOT NULL, salt VARCHAR(128), password VARCHAR(128), is_active TINYINT(1) DEFAULT '1', is_super_admin TINYINT(1) DEFAULT '0', last_login DATETIME, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX is_active_idx_idx (is_active), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user_group (user_id BIGINT, group_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(user_id, group_id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user_permission (user_id BIGINT, permission_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(user_id, permission_id)) ENGINE = INNODB;
ALTER TABLE tweet ADD CONSTRAINT tweet_user_id_tweet_user_id FOREIGN KEY (user_id) REFERENCES tweet_user(id) ON DELETE CASCADE;
ALTER TABLE tweet ADD CONSTRAINT tweet_source_id_tweet_source_id FOREIGN KEY (source_id) REFERENCES tweet_source(id) ON DELETE CASCADE;
ALTER TABLE tweet ADD CONSTRAINT tweet_geolocation_id_tweet_geo_location_id FOREIGN KEY (geolocation_id) REFERENCES tweet_geo_location(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_forgot_password ADD CONSTRAINT sf_guard_forgot_password_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_group_permission ADD CONSTRAINT sf_guard_group_permission_permission_id_sf_guard_permission_id FOREIGN KEY (permission_id) REFERENCES sf_guard_permission(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_group_permission ADD CONSTRAINT sf_guard_group_permission_group_id_sf_guard_group_id FOREIGN KEY (group_id) REFERENCES sf_guard_group(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_remember_key ADD CONSTRAINT sf_guard_remember_key_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_group ADD CONSTRAINT sf_guard_user_group_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_group ADD CONSTRAINT sf_guard_user_group_group_id_sf_guard_group_id FOREIGN KEY (group_id) REFERENCES sf_guard_group(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_permission ADD CONSTRAINT sf_guard_user_permission_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_permission ADD CONSTRAINT sf_guard_user_permission_permission_id_sf_guard_permission_id FOREIGN KEY (permission_id) REFERENCES sf_guard_permission(id) ON DELETE CASCADE;
